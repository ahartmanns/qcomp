const int T;

// Maximum probability that a leader has been elected by time T
// RESULT (delay=30,T=50): 0.0
// RESULT (delay=30,T=500): 0.0
// RESULT (delay=30,T=5000): 1.0
// RESULT (delay=360,T=50): 0.0
// RESULT (delay=360,T=500): 0.25
// RESULT (delay=360,T=5000): 1.0
"deadline_max": Pmax=? [ F<=T "done" ];

// Minimum probability that a leader has been elected by time T
// RESULT (delay=30,T=5000): 0.851563
// RESULT (delay=30,T=10000): 0.989969
// RESULT (delay=30,T=15000): 0.999309
// RESULT (delay=360,T=5000): 0.78125
// RESULT (delay=360,T=10000): 0.974731
// RESULT (delay=360,T=15000): 0.997186
"deadline_min": Pmin=? [ F<=T "done" ];

// Minimum probability that a leader is eventually elected
// RESULT (delay=30): 1.0
// RESULT (delay=360): 1.0
"eventually": Pmin=? [ F "done" ];
